name: Pull Request Validation

on:
  pull_request:
    branches: [ staging, production, main ]
    types: [ opened, synchronize, reopened ]

jobs:
  validate-flutter:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'hipop/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 'stable'
        cache: true

    - name: Get Flutter dependencies
      run: |
        cd hipop
        flutter pub get

    - name: Run Flutter analysis
      run: |
        cd hipop
        flutter analyze --no-fatal-infos

    - name: Run Flutter tests
      run: |
        cd hipop
        flutter test --coverage
      continue-on-error: true

    - name: Check for sensitive files
      run: |
        if find . -name "google-services.json" -not -path "./hipop/android/app/google-services.json" | grep -q .; then
          echo "❌ Found google-services.json in unexpected location!"
          exit 1
        fi
        
        if find . -name "GoogleService-Info.plist" -not -path "./hipop/ios/Runner/GoogleService-Info.plist" | grep -q .; then
          echo "❌ Found GoogleService-Info.plist in unexpected location!"
          exit 1
        fi
        
        echo "✅ No sensitive files found in wrong locations"

  validate-website:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'hipop-website/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: hipop-website/package-lock.json

    - name: Install dependencies
      run: |
        cd hipop-website
        npm ci

    - name: Run lint
      run: |
        cd hipop-website
        npm run lint
      continue-on-error: true

    - name: Build website
      run: |
        cd hipop-website
        npm run build

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for secrets in commit
      run: |
        # Check for common secret patterns
        if git log --oneline -p | grep -i -E "(api[_-]?key|secret|password|token)" | grep -E "^[+-].*['\"].*['\"]"; then
          echo "⚠️ Potential secrets found in commit messages or diffs"
          echo "Please review and ensure no sensitive data is committed"
          exit 1
        fi
        echo "✅ No obvious secrets detected"

    - name: Validate gitignore effectiveness
      run: |
        # Simulate adding sensitive files to check gitignore
        touch test-google-services.json
        touch test-GoogleService-Info.plist
        touch .env.test
        
        if git check-ignore test-google-services.json test-GoogleService-Info.plist .env.test; then
          echo "✅ .gitignore is working correctly"
          rm test-google-services.json test-GoogleService-Info.plist .env.test
        else
          echo "❌ .gitignore is not properly configured"
          rm test-google-services.json test-GoogleService-Info.plist .env.test
          exit 1
        fi

  pr-summary:
    runs-on: ubuntu-latest
    needs: [validate-flutter, validate-website, security-check]
    if: always()
    
    steps:
    - name: PR Validation Summary
      run: |
        echo "## 📋 Pull Request Validation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.validate-flutter.result }}" == "success" ] || [ "${{ needs.validate-flutter.result }}" == "skipped" ]; then
          echo "✅ Flutter validation: Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Flutter validation: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.validate-website.result }}" == "success" ] || [ "${{ needs.validate-website.result }}" == "skipped" ]; then
          echo "✅ Website validation: Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Website validation: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.security-check.result }}" == "success" ]; then
          echo "✅ Security check: Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Security check: Failed" >> $GITHUB_STEP_SUMMARY
        fi